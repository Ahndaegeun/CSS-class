**선택자 (Selector) { 
    속성 : 속성값;
}

- 기본 선택자 (Basic Selectors)

1. 전체 선택자 (Universal Selector) = *
2. 태그 선택자 (Type Selector) = tag name으로 사용 EX) div, a, li...
3. 클래스 선택자 (Class Selector) = .class 이런식으로 클래스 이름 앞에 .사용
4. 아이디 선택자 (ID Selector) = #id 이런식으로 아이디 이름 앞에 #사용


-복합 선택자 (Combinators)

1. 일치 선택자(Basic Combinator)
    EX) span.orange => span tag이면서 orange라는 class를 가지고 있는 것을 선택
2. 자식 선택자(child Combinator)
    EX) ul > .orange => ul tag안에 orange라는 class를 가지고 있는 것을 선택
3. 후손(하위) 선택자(Descendant Combinator)
    띄어쓰기가 선택자의 기호
    EX) div .orange => div의 후손인 orange라는 class를 가지고 있는 것을 선택
4. 인접 형제 선택자(Adjacent Sibling Combinator)
    EX) .orange + li => li tag중에 인접해있는 다음 class인 .orange라는 class를 가지고 있는 것을 선택
5. 일반 형제 선택자(General Sibling Combinator)
    EX) .orange ~ li => li tag중에 .orange class를 가지고있는 li tag 다음 li tag를 모두 선택


-가상 클래스 선택자(Pseudo-Classes Selectors)

1. HOVER - 마우스가 올라가있는 동안에만 선택
    E:hover
2. ACTIVE - 마우스로 클릭하는 동안에만 선택
    E:active
3. FOCUS - 포커스 된 동안에만 선택 (보통 input에서 많이 사용)
    E:focus
4. FIRST CHILD - 형제 요소 중 첫번째 요소라면 선택
    E:first-child
5. LAST CHILD - 형제 요소 중 마지막 요소라면 선택
    E:last-child
6. NTH CHILD - 형제 요소 중 n번째 요소라면 선택
    E:nth-child(n)
    odd -> 모든 짝수 요소들 선택 가능 / even -> 모든 홀수 요소 선택 가능
    
    ##조상 요소 안의 태그가 다른 여러 후손을 선택할때 XXX-child앞에 선택자 이름을 지울수 있다.
        html) <div class="orange">
                <div>1</div> //선택
                <div>2</div>
                <div>
                    <p>3-1</p> //선택
                    <div>3-2</div>
                </div>
              </div>
        css) .orange :first-child
6. NTH OF TYPE - 타입(태그이름)과 동일한 타입인 형제 요소 중 E가 n번째 요소라면 선택
    E:nth-of-type(n) type은 tag이름을 의미 .class혹은 #id는 앞에 붙을수 없음
7. 부정 선택자(Negation Selector) - S가 아닌 E 선택
    E:not(S)


-가상 요소 선택자(Pseudo-Elements Selectors)

1. BEFORE - 요소 내부 앞에, 내용(content)을 삽입
    E::before
2. AFTER - 요소 내부 뒤에, 내용(content)을 삽입
    E::after


-속성 선택자(Attribute Selectors)

1. ATTR - 속성 attr을 포함한 요소 선택
    [attr]
    html) <input type="text" value="disabled text" disabled>
    css) [disabled] { color : red; }
2. ATTR = VALUE - 속성 attr을 포함하며 속성 값이 value인 요소 선택
    [attr=value]
    html) <ipnut type="password" value="1234">
    css) [type="password"] { color : red;} 대괄호 안에 큰따옴표는 생략 가능
3. ATTR^=VALUE - 속성 attr을 포함하며 속성 값이 value로 시작하는 요소 선택
    [attr^=value]
    html) <button class="btn-success">Success</button>
          <button class="btn-danger">danger</button>
    css) [class^="btn-"] { color : red; } - btn-으로 시작하는 요소 선택
4. ATTR$=VALUE - 속성 attr을 포함하며 속성 값이 value로 끝나는 요소 선택
    [attr$=value]
    html) <button class="btn-success">Success</button>
          <button class="btn-danger">danger</button>
    css) [clas$^="success"] { color : red; } - success로 끝나는 요소 선택
         [clas$^="danger"] { color : blue; } - danger로 끝나는 요소 선택


-상속(Inheritance)

상속되는 속성들(properties) - 글자를 다루는 속성들이 상속됨
    font(size-weight-style-line height-family)
    color
    text-align
    etc...

강제 상속 - inherit;


-우선순위
명시도, 선언 순서, 중요도 에 따라서 순위 결정

1.가장 중요(!important) - 모든 선언을 무시하고 가장 우선
2.인라인 선언 방식(Style Attribute) - 인라인 선언
3.아이디(ID Selector) - 아이디 선택자
4.클래스(Class Selector) - 클래스 선택자
5.태그(Tag Selector)
6.전체(Universal Selector)
7.상속(CSS Inheritance)




**단위

px - 픽셀 단위 사이즈
% - 부모요소의 영향을 받아서 단위를 완성 50%라고하면 부모요소의 사이즈에 50%
em - 자기 자신의 폰트사이즈에 영향을 받음 nem 하면 영향을 받은 font size에 n을 곱함
rem - html tag의 font size영향을 받음
vw - viewport의 가로 사이즈 기본적으로 백분율 EX)50vw 뷰포트의 절반
vh - viewport의 세로 사이즈 기본적으로 백분율 EX)50vh 뷰포트의 절반
vmin, vmax - max는 가로와 세로중 더 넓은 쪽의 백분율을 적용/ min은 더 좁은쪽의 백분율 적용
    50vmin


**박스 모델

-속성값
1. width, height
    auto - 브라우저가 너비를 계산 - 기본값 : auto
    단위 - px, em, cm등 단위로 지정
2. max-width, min-width, max-height, min-height
    단위 - px,em,%등 단위로 지정 - 기본값(max/min) : none/0
    auto - 브라우저가 너비(높이)를 계산
3. margin - 요소의 '외부(바깥)여백'을 지정 [단축속성], 음수값 사용가능 - Negative margin
    단위 - px, em, cm 등 단위로 지정 - 기본값 : 0
    auto - 브라우저가 너비를 계산
    % - 부모요소의 너비에 대한 비율로 지정
    단축속성 : 상 우 하 좌(=[상 우 하 좌];); 상 [좌,우] 하; [상,하] [좌,우]; 상부터 시계방향으로 진행
    마진 중복 : 여백이 겹쳐짐
        마진 중복 계산법
            양수 중복 - 큰 값
            음수 중복 - 작은 값
            양수 + 음수 중복 - 더한 값
4. padding - 요소 '내부(안)여백'을 지정 [단축속성]
    단위 - px, em, cm등 단위로 지정 - 기본값 : 0
    % - 부모 요소의 너비에 대한 비율로 지정
    단축속성 : margin과 같음
    크기 증가 - 내부 여백만큼 요소의 크기가 커짐
        box-sizing: border-box 추가시 보이는대로 만들어짐(자동계산)
5. border - 요소의 '테두리 선'을 지정
    -width - 선의 두께(너비) - 기본값 : medium
    -style - 선의 종류 - 기본값 : none
    -color - 선의 색상 - 기본값 : black
    단축 속성 : 두께 종류 색상;
    -width 속성 값
        medium - 중간 두께 - 기본값 medium
        thin - 얇은 두께
        thinck - 두꺼운 두께
        단위 - px, em, cm등 단위로 지정
    -style 속성 값
        none 선 없음 기본값
        hidden 선 없음과 동일 (table요소에서 사용)
        solid 실선
        dotted 점선
        dashed 파선
        double 두줄선
        groove 홈이 파여있는 모양 선
        ridge 솟은 모양 선(그groove와 반대)
        inset 요소 전체가 들어간 모양 선
        outset 요소 전체가 나온 모양 선
    -color 속성 값
        색상 - 선의 색상을 지정 - 기본값 : black
        transparent - 투명한 선(요소의 배경색이 보임)
6. box-sizing - 요소의 크기 계산 기준을 지정
    content-box - 너비(width, height)만으로 요소의 크기를 계산 - 기본값 : content-box
    border-box - 너비(widht, height)에 안쪽 여백(padding)과 테두리선(border) 을 포함하여 요소의 크기를 계산
7. display - 요소의 박스 타입을 설정
    block - 블록 요소 div
    inline - 인라인 요소 span
    inline - block 인라인-블럭요소 input
    기타 - tablem table-cell flex등
    none - 요소의 박스 타입이 없음(요소가 사라짐)
8.overflow - 요소 크기 이상으로 내용(자식요소)이 넘쳤을 때, 내용의 보여짐을 제어 [단축속성]
    visible - 넘친부분을 자르지 않고 그대로 보여줌 - 기본값 : visible
    hidden - 넘친 부분을 잘라내고, 보이지 않도록 함
    scroll - 넘친 부분을 잘라내고, 스크롤 바를 이용하여 볼 수 있도록 함
    auto - 넘친 부분이 있는 경우만 잘라내고, 스크롤 바를 이용하여 볼 수 있도록 함
9.opacity - 요소의 투명도 지정
    숫자 - 0부터 1사이의 소숫점 숫자 지정 - 기본값 : 1


**글꼴, 문자

1. font - 글자 관련 속성들을 지정 [단축속성]
    -style - 글자 기울기 지정 - 기본값 : normal
    -weight - 글자 두께 지정 - 기본값 : normal
    -size - 글자 크기 지정 - 기본값 : medium(16px)
    -line-height - 줄 높이 지정 - 기본값 : normal(Reset.css 적용시 1)
    -family - 글꼴(서체) 지정 - 기본값 : 운영체제(브라우저)에 따라 달라짐

    #단축 속성
        기울기 두께 크기 / 줄높이 글꼴;
        font: italic bold 20px / 1.5 "Arial", sans-serif;
        size, family 필수

    -style
        normal - 스타일 없음 - 기본값 : normal
        italic - 이텔릭체(활자) 보통 많이 사용
        oblique - 기울어진 글자
    -weight
        normal - 기본 글자 두께, 400과 동일 - 기본값 : normal (400)
        bold - 글자 두껍게, 700과 동일
        bolder - 부모(상위) 요소 보다 더 두껍게(bold보다 두껍다는 개념이 아님)
        lighter - 부모(상위) 요소 보다 더 얇게
        숫자 - 100부터 900까지의 100단위 숫자 9개, normal과 bold이외의 두께를 제공하는 글꼴을 위한 설정
            100 - thin (hairline)
            200 - extra light (ultra light)
            300 - light
            400 - normal
            500 - medium
            600 - semi bold (demi bold)
            700 - bold
            800 - extra bold (ultra bold)
            900 - black (heavy)

            #두께가 없는경우 - 100~500 => normal / 600~900 => bold
    -size
        단위 - px,em,cm등 단위로 지정 - 기본값 : 16px
        % - 부모(상위)요소의 비율로 지정
        xx-small - 가장 작은 크기
        x-small - 더 작은 크기
        small - 작은 크기
        medium - 중간 크기
        large - 큰 크기
        x-large - 더 큰 크기
        xx-large - 가장 큰 크기
        smaller - 부모 요소 보다 작은 크기
        larger - 부모 요소 보다 큰 크기
    -line-height
        normal - 브라우저의 기본 정의를 사용 (1~1.4) - 기본값 : normal
        숫자 - 요소 자체 글꼴 크기의 배수로 지정
        단위 - px,em,cm등 단위로 지정
        % - 요소 자체 글꼴 크기의 비율로 지정
    -family
        글꼴이름 - 글꼴 후보 목록을 지정
        serif - 글꼴 계열 이름을 지정
        sans-serif, monospace, cursive, fantasy
2. color - 문자의 색을 설정
    -색상 - 문자의 색을 지정
        색상이름 - 브라우저에서 제공하는 색상의 이름 - red,blue...
        hex색상코드 - 16진수 색상 (Hexadecimal colors) - #000000
        rgb - 빛의 삼원색 - rgb(255, 255, 255)
        rgba - 빛의 삼원색 + 투명도 - rgba(255, 0, 0, .5)
        hsl - 색상 채도 명도 - hsl(120, 100%, 50%)
        hsla - 색상 채도 명도 투명도 - hsla(120, 100%, 50%, .3)
3. text-align - 문자 정렬 방식을 지정
    left - 왼쪽
    right - 오른쪽
    center - 가운데
    justify - 양쪽 맞춤 (두줄 이상일때, <br>태그사용시 작동X)
4. text-decoration - 문자의 장식(line 선에대한 장식)을 설정
    none - 선 없음 - 기본값 : none
    underline - 밑줄
    overline - 윗줄
    line-through - 중앙선
5. text-indent - (첫줄의) 들여쓰기를 지정 / 음수값 사용가능
6. letter-spacing - 문자의 자간(굴자 사이 간격)을 설정
    normal - 단어 사이의 일반 간격 - 기본값 : normal
    단위 - px, em, cm등 단위로 지정
7. word-spacing - 단어 사이(띄어쓰기)의 간격을 설정
    normal - 단어 사이의 일반 간격 - 기본값 : normal
    단위 - px, em, cm등 단위로 지정


**띄움(정렬), 위치

1. float - 요소를 좌우 방향으로 띄움(수평정렬할 수 도 있다)
    none - 요소 띄움 없음 - 기본값 : none
    left - 왼쪽으로 띄움
    right - 오른쪽으로 띄움
    필수적으로 해제를 해야됨 (clear)
        형제요소에 clear
        부모요소에 overflow
        ***부모요소에 clearfix 클래스 추가하여 해제, display : block해야됨
    -clear
        none - 요소 띄움 허용 - 기본값 : none
        left - 왼쪽 띄움 해제
        right - 오른쪽 띄움 해제
        both - 양쪽 모두 띄움 해제
2. position - 요소의 위치 지정 방법의 유형(기준)을 설정
    static - 유형(기준)없음 / 배치 불가능 - 기본값: static
    relative - 유소 자신을 기준으로 배치 - 자신이 있던 자리에서 이동 / 시각적으로만 이동
    absolute - 위치 상 부모 요소를 기준으로 배치 - 공중으로 뜨는 상태가 됨
               부모요소에게 position값이 있어야 원하는 기준을 잡을수 있음 / static X
    fixed - 브라우저(뷰포트)를 기준으로 배치
    sticky - 스크롤 영역 기준으로 배치 / IE지원 불가

    - top, left, bottom, right 사용해서 위치를 잡음
        auto기본값이며 단위를 주로 사용한다
        % - 부모(위치상의 부모)요소의 세로 너비의 비율로 지정, 음수값 허용 <top, bottom>
        % - 부모(위치상의 부모)요소의 가로 너비의 비율로 지정, 음수값 허용 <left, right>

    -z-index / z축
        static을 제외한 position속성의 값이 있을 경우 가장 위에 쌓임(값은 무관)
        position이 모두 존재한다면 z-index속성의 숫자값이 높을수록 위에 쌓임
        position속성의 값이 있고 z-index속성의 숫자 값이 같다면 'html'의 마지막 코드일수록 위에 쌓임

    -display 수정
        absolute, fixed속성값이 적용된 요소는 display속성의 값이 대부분 block으로 수정됨


**배경

1. background - 요소의 배경을 설정 [단축속성]
    background : 색상 이미지경로 반복 위치 스크롤특성;

    -color - 배경색상 - 기본값 : transparent
        색상 - 요소의 배경 색상
        transparent - 투명 - transparent
    -image - 하나 이상의 배경 이미지 - 기본값 : none
        none - 이미지 없음 - 기본값 : none
        url("경로") - 이미지 경로(url)
    -repeat - 배경 이미지의 반복 - repeat
        repeat - 배경이미지를 수직,수평으로 반복 - 기본값 : repeat
        repeat-x - 배경 이미지를 수평으로 반복
        repeat-y - 배경 이미지를 수직으로 반복
        no-repeat - 반복 없음
    -position - 배경 이미지의 위치 - 0 0
        % - 왼쪽 상단 - 0% 0%, 오른쪽 하단 - 100% 100% - 기본값 : 0% 0%
        방향 - 방향을 입력하여 위치 설정 - top,bottom,left,right,center
        단위 - px,em,cm등 단위로 지정
    -attachment - 배경 이미지의 스크롤 여부(특성) - scroll
        scroll - 배경 이미지가 요소를 따라서 같이 스크롤 됨 - 기본값 : scroll
        fixed - 배경 이미지가 뷰포트에 고정되어, 요소와 같이 스크롤 되지 않음
        local - 요소 내 스크롤 시 이미지가 같이 스크롤 됨
    -size - 배경 이미지의 사이즈를 설정
        auto - 배경 이미지가 원래의 크기로 표시됨 - 기본값 : auto
        단위 - px, em, %등 단위로 지정
            - width height 형태로 입력 가능(120px 370px)
            - width만 입력하면 비율에 맞게 지정 됨 
        cover - 배경 이미지의 크기 비율을 유지하며, 요소의 더 넓은 너비에 맞춰짐
                이미지가 잘릴수 있음
        contain - 배경 이미지의 크기 비율을 유지하며, 요소의 더 짧은 너비에 맞춰짐
                  이미지가 잘리지 않음


**전환(transition) - css 속성의 전환 효과를 지정 [단축속성]
    바뀌기 전 상태에 적용
    transition : width 1s, background 1s; / transition : 속성이름 지속시간 [타이밍함수 대기시간];

    -property - 전환 효과를 사용할 속성 이름 - 기본값 : all
        all - 모든 속성에 적용 - 기본값 : all
        속성 이름 - 전환효과를 사용할 속성 이름
    -duration - 전환 효과의 지속시간 설정 - 기본값 : 0s
        시간 - 전환 효과가 지속되는 시간 - 기본값 : 0s
    -timing-function - 타이밍 함수 지정 - 기본값 : ease
        ease, linear, ease-in out etc..
        easing function google search
    -delay - 전환 효과의 대기시간 설정 - 기본값 : 0s
        시간 - 전환효과의 대기시간을 설정 - 기본값 : 0s


**변환(transform) - 요소의 변환 효과(변형)를 지정
    transform : 변환함수1 변환함수2 변환함수3 ....;
    transform : 원근법 이동 크기 회전 기울임;

    -2D 변환 속성값(transform value)
        -translate(x,y) - 이동 - 단위
        -scale(x, y) - 크기 - 없음(배수)
        -rotate(degree) - 회전(각도) - deg
        -skew(x-deg, y-deg) - 기울임 - deg
        -matrix(n, n, ,n ,n ,n ,n) - 2차원 변형 효과 - 없음 ##위의 모든 효과를 한번에

    -3D 변환 속성값(transform value)
        -transrate3d(x, y, z) - 이동 - 단위
        -transratez(z) - 이동(z축) - 단위
        -scale3d(x, y, z) - 크기 - 없음(배수)
        -scalez(z) - 크기(z축) - 없음(배수)
        -rotate(x, y, z, a) - 회전(x벡터, y벡터, z벡터, 각도) - 없음, deg
        -perspective(n) - value값 제일 앞부분에 설정 원근법(거리) - 단위
        -matrix3d(n, n, n, n, n, n, n, n, n, n, n, n, n, n, n, n) - 3차원 변환 효과 - 없음

    -origin - 요소 변환의 기준점을 설정
        x/y/z - left, right, center, %, 단위 / top, bottom, center, %, 단위 / 기본값 : 50% / 50% / 0
    -style - 3D변환 요소의 자식 요소도 3D변환을 사용할지 설정
        flat - 자식 요소의 3D변환을 사용하지 않음 - 기본값 : flat
        preserve-3D - 자식 요소의 3D변환을 사용함
    -perspective - 하위 요소를 관찰하는 원근 거리를 설정
        단위 - px, em, cm등 단위로 지정
            ##perspective - 관찰 대상의 부모 요소 - 기준점 설정 : perspective-origin
              transform: perspective() - 관찰 대상 - 기준점 설정 : transform-origin
              #perspective속성은 관찰 대상의 부모  요소에 적용하여 하위 요소들을 관찰하는 원근 거리를 설정하며,
                transform: perspective()변환 함수는 관찰 대상에 직접 적용하여 그 대상을 관찰하는 원근 거리를 설정합니다.
    -perspective-origin - 원근 거리의 기준점을 설정
        x축 - left, right, center, %, 단위 - 기본값 : 50%
        y축 - top, bottom, center, %, 단위 - 기본값 : 50%
    -backface-visivility - 3D변환으로 회전된 요소의 뒷면 숨김을 설정
        visible - 뒷면 숨기지 않음 - 기본값 : hidden
        hidden - 뒷면 숨김

    *matrix() - 요소의 2차원 변환(Transform)효과를 지정 / scale(), skew(), translate(), rotate()를 지정
        브라우저에서는 위의 개별함수를 matrix로 변환 계산되어 적용, 일반적으로는 사용하지 않음


**애니메이션(animation) - 요소에 애니메이션을 설정/제어 [단축속성]
    animation: 애니메이션이름 지속시간 [타이밍함수 대기시간 반복횟수 반복방향 전후상태 재생/정지];

    -name - @keyframes규칙의 이름을 지정 - none
        none - 애니메이션을 지정하지 않음 - 기본값 : none
        @keyframes 이름 - 이름이 일치하는 @keyframes 규칙의 애니메이션을 적용
    -duration - 애니메이션의 지속 시간 설정 - 0s
        시간 - 지속시간을 설정 - 기본값 : 0s
    -timing-function - 타이밍 함수 지정 - ease
        ease, linear등과 같음
    -delay - 애니메이션의 대기 시간 설정 - 0s
        시간 - 대기 시간을 설정 - 기본값 : 0s 음수 허용(음수를 입력한 만큼 건너뛰고 재생) / duration보다 뒤에 적어야함
    -iteration-count - 애니메이션의 반복 횟수 설정 - 1
        숫자 - 반복 횟수를 설정 - 기본값 : 1
        infinite - 무한 반복
    -dirention - 애니메이션의 반복 방향 설정 - normal
        normal - 정방향만 반복 - 기본값 : normal
        reverse - 역방향만 반복
        alternate - 정방향에서 역방향으로 반복 (왕복)
        alternate-reverse - 역방향에서 정방향으로 반복(왕복)
    -fill-mode - 애니메이션의 전후 상태(위치)설정 - none
        none - 기존위치에서 시작 -> 애니메이션 시작 위치로 이동 ->동작 -> 기존 위치에서 끝 - 기본값 : none
        forwards - 기존위치에서 시작 -> 애니메이션 시작 위치로 이동 -> 동작 -> 애니메이션 끝 위치에서 끝
        backwards - 애니메이션 시작 위치에서 시작 -> 동작 -> 기존 위치에서 끝
        both - 애니메이션 시작 위치에서 시작 -> 동작 -> 애니메이션 끝 위치에서 끝
    -play-state - 애니메이션의 재생과 정지 설정 - running
        running - 애니메이션을 동작 - 기본값 : running
        paused - 애니메이션 동작을 정지

    애니메이션 설정 규칙 - 2개 이상의 애니메이션 중간 상태(프레임)을 지정
    @keyframes name {
        0% { 속성: 값;}
        50% { 속성: 값;}
        100% { 속성: 값;}
    }


**다단(multi-columns) - 일반 블록 레이아웃을 확장하여 여러 텍스트 다단으로 쉽게 정리하며, 가독성 확보
    1. columns - 다단을 정의 [단축 속성]
        auto - 브라우저가 단의 너비와 개수를 설정 - 기본값 : auto
        column-width - 단의 최적 너비를 설정 - 기본값 : auto
            auto - 브라우저가 단의 너비를 설정 - 기본값 : auto
            단위 - px,em,cm등 단위로 지정
            각 단이 줄어들 수 있는 최적 너비를 설정하며,
                요소의 너비가 가변하여 하나의 단이 최적 너비보다 줄어들 경우 단의 개수가 조정됨
        column-count - 단의 개수를 설정 - 기본값 : auto
            auto - 브라우저가 단의 개수를 설정 - 기본값 : auto
            숫자 - 단의 개수를 설정
        columns: 너비 개수;
    2. column-gap - 단과 단 사이의 간격을 설정
        normal - 브라우저가 단과 단 사이의 간격을 설정(1em) - 기본값 : normal
        단위 - px, em, cm등 단위로 지정
    3. column-rule - 단과 단 사이의 (구분)선을 지정 [단축 속성]
        column-width - 선의 두께를 지정 - 기본값 : medium
        column-style - 선의 종류를 지정 - 기본값 : none
        column-color - 선의 색상을 지정 - 기본값 : 요소의 글자 색과 동일
        column-rule: 두께 종류 색상;